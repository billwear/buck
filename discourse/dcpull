#!/usr/bin/python3
import argparse
import logging
import sys
import time
from pathlib import Path

import requests
import yaml

logging.basicConfig(level=logging.INFO, format="%(levelname)s: %(message)s")
log = logging.getLogger(__name__)


class DiscourseAPI:
    def __init__(self, base_url, config):
        self.base_url = base_url
        self.config = config
        self.session = requests.Session()
        self.session.headers.update({"Api-Key": config["api_key"]})

    def call_api(self, endpoint):
        while True:
            response = self.session.get(self.base_url + endpoint)
            if response.status_code == 429:
                wait_seconds = response.json()["wait_seconds"]
                log.warning("Rate limited. Sleeping for %s secs", wait_seconds)
                time.sleep(wait_seconds)
            else:
                response.raise_for_status()
                return response.json()

    def get_post(self, post_id):
        return self.call_api(f"/posts/{post_id}.json")

    def get_title(self, post_json):
        return post_json["fancy_title"]

    def get_topic(self, topic_id):
        return self.call_api(f"/t/{topic_id}.json")


def parse_args():
    """Parse command line arguments."""
    parser = argparse.ArgumentParser(
        description=__doc__, formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )
    parser.add_argument(
        "-n", "--topic-id", type=int, required=True, help="Post ID to fetch"
    )
    parser.add_argument(
        "-t", "--title-only", action="store_true", help="Only output title"
    )
    return parser.parse_args()


def load_config(config_file):
    """Load API credentials from config file."""
    with config_file.open() as f:
        return yaml.safe_load(f)


def output_result(api, args, post_json):
    """Print post title or full content based on args."""
    if args.title_only:
        print(post_json)
        print(api.get_title(post_json))
    else:
        print(post_json["raw"])


def main():
    """Main entry point."""
    args = parse_args()

    config_file = Path.home() / ".config/dc.yaml"
    config = load_config(config_file)

    base_url = config.get(
        "base_url", "https://example.com/api"
    )  # Use default if not provided
    api = DiscourseAPI(base_url, config)

    topic_json = api.get_topic(args.topic_id)
    if args.title_only:
        print(topic_json["fancy_title"])
    else:
        post_id = topic_json["post_stream"]["posts"][0]["id"]
        post_json = api.get_post(post_id)
        output_result(api, args, post_json)


if __name__ == "__main__":
    main()
